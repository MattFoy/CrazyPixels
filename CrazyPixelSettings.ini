; This section contains a few high level settings which control how the program runs.
[GLOBAL]
	; This setting controls the maximum fps displayed, this prevents the calculations
	; from being run too quickly if you somehow have a really good ratio between processing
	; power and screen resolution, or if you set the resToCellRatio relatively high.
	fpsCap = 25
	
	; This setting controls the ratio of pixels squared to cells in the grid. It should always be a factor of your screen resolution (ie 2, or 4)
	; A ratio of 1 means 1 pixel = 1 cell
	; A ratio of 2 means 4 pixels = 1 cell
	; Therefore increasing this setting decreases the processing load
	resToCellRatio = 2
	
	; This setting makes the program run "like a screensaver" and exit if the mouse moves.
	BREAK_ON_MOUSE_MOVEMENT = false
	
	; This setting will make each screen run 4 instances in each quadrant.
	SPLIT_SCREEN = false

; This section contains settings that control how the cells appear on the screen
[COLOR]
	rgb1 = -16711936
	rgb2 = -16777216
	rgb3 = -16777216
	
	; This setting will make the screen entirely white with black lines indicating the borders between color groups.
	CRUDE_OUTLINES_ONLY = false
	
	; This setting will cause the colors on the screen to slowly shift over time.
	COLOR_MORPH = false
	
	; This setting controls which method is used to shift the colours
	; 0: Crude. Each time the program shifts a colour it will either add or subtract a small amount from the R, G, and B values of each colour.
	; 1: Slightly more advanced. A colour gradient is generated based on the process described by this (http://krazydad.com/tutorials/makecolors.php) article
	; TODO: Extend the capability of method 1 to ensure that when one gradient ends and another begins the transition is smooth.
	MORPH_METHOD = 1
	
	; This setting controls how many frames must pass before the colours shift. Must be 1 or greater.
	colourShiftInterval = 5
	
	; This setting controls whether or not the screen is "blurred". When painting the screen the colour is normally selected from the colour array.
	; If this setting is true then the colour will instead be created from the average of all adjacent colours, creating a rudimentary gradient.
	COLOR_SMOOTHING = true
	
	; This setting controls how thick the border generated when fuzzEdges is set to true.
	borderThickness = 5

; This section contains settings that control the behaviour of individual cell mechanics
[CALCULATION]
	; This setting controls how highly an individual cell values itself when performing a calculation
	selfCount = -1
	
	; This setting controls how highly an individual cell values its neighbours when performing a calculation
	othersCount = 4
	
	; This setting controls how much is added to underdogs, or subtracted from the highest colors when performing a calulcation
	normalization = 5
	
	; This setting determines whether or not a secondary (shadow) grid is used to record changes during a round of calculations
	; or if calculations are done in place in the same grid.
	useShadowGrid = true
	
	; This setting determines whether or not calculations are performed in the same direction, same order, each time (false) or not (true)
	scrandomize = true
	
	; This setting determines whether or not the direction is chosen sequentially (false) or at random each time (true)
	randScrand = false
	
	; This determines whether or not the edges of the grid are "fuzzed", meaning that the empty cells beyond the border are counted as a
	; random value. When true this strongly encourages new colour groups to form sort of spontaneously. This also controls whether
	; or not a thin black border is drawn over the edges to hide the most static parts of the grid.
	fuzzEdges = true
	
	; This setting determines how much value is added randomly to a color value on each cell operation. This setting can be used to
	; strongly encourage change / chaos. At high values relative to the count variables, this would essentially create complete static.
	chaosFactor = 1

;; Author: Matthew Foy
